UID是用的唯一标识，管理员root的UID是0
用户信息及组信息的存放文件：
	/etc/passwd存放用户信息
	/etc/shadow存放用户密码
	/etc/group存放组信息
	/etc/gshadow存放组密码
组：方便对用户的管理，方便对权限的管理
	组的唯一标识：GID Linux的用户至少属于一个组
	组分为两种：基本组（在新组创建的时候，系统自动创建的） 附加组
添加用户：用户信息存放在/etc/passwd 文件中
	显示的信息如下：
		root : x : 0 : 0 : root : /root : /bin/bash
		用户名:密码:UID:GID:用户描述信息:用户的家目录:用户的登陆解释器
	   用户密码存放在/etc/shadow 文件中
	显示信息如下：
		root : !!或密码串 ： 距离上次的密码修改时间 ： 0 ： 99999 ： 7 :  :  :
		用户名：密码！！表示没密码：距离上次修改密码的时间：过多少天必须修改密码0是不用改：密码有效期：在密码失效前需要提前多少天改密码 
使用useradd命令添加用户：
	添加用户并指定用户的UID：useradd -u 数字 用户名
	添加用户并指定用户家目录：useradd -d 路径 用户名
	添加用户并指定登陆解释器：useradd -s /sbin/nologin 用户名（这个是创建不能登陆的用户）
使用passwd命令修改密码：root权限下可以任意修改普通用户的密码
	命令格式：passwd 普通用户名
	非交互式的设置密码：echo 密码 | passwd --stdin 用户名(如果不加 --stdin会显示交互信息)
修改用户的属性：
	命令格式：usermod [选项] 参数
	修改用户的UID：usermod -u 
	修改用户的家目录：usermod -d
	修改用户的解释器：usermod -s
	修改用户的附加组：usermod -G
		例：usermod -u 1600 -d /opt/a -s /sbin/nologin -G 组名称 所需要改的用户名
使用userdel命令删除用户：
	删除用户：userdel 用户名
	删除用户及家目录：userdel -r 用户名
修改用户组信息及创建组：
	组信息在/etc/group 文件里的显示内容如下
		root ： x ：0 ：组成员
		组名：组的密码占位符：组的ID：组成员列表
	创建新的组：groupadd 组名
	把用户加进组里：gpasswd -a 用户名 组名
	把用户从组里删除：gpasswd -d 用户名 组名
修改组属性：
	修改组ID：groupmod -g 新ID 组名
	修改组名称：groupmod -n 新组名 原组名
	删除组：groupdel 组名
目录或文件的权限及归属：
	读取权限：r
	写入权限：w
	可执行权限：x
	权限适用对象：u（所有者） g（所属组） o（其他用户）
		例：ls -ld /opt 显示内容如下
			d rwxr-x--x. 10 root root 4096 12月 3 20：06 /opt
			#第一列：d代表该文档是目录 -代表普通文件 l代表快捷方式
			#第二列：rwx代表所有者的权限有 读、写、执行
				 r-x代表所属组成员的权限有 读、执行
				 --x代表其他用户有执行权限，但是一般执行权限必须要与r权限一起使用
			#第四列：该目录的所有者是哪个用户
			#第五列：该目录的所属组是哪个组
利用chmod命令修改文档的权限：
	为文档更改权限：chmod u/g/o +/-/= 目标文件或目录
		例：chmod u+r /opt 、 chmod g=w /opt
	如果想更改多个权限可以用逗号隔开
		例：chmod u+r,g=x /opt
	一个用户能否cd进一个目录，在于该用户对该目录是否有x权限
	如果一个用户拥有一个目录的所有权限，则可以对这个目录下的所有子目录做任意修改
利用chown命令修改文档的所属关系：
	修改目录的所有者： chown -R lisi /opt #-R是递归修改，也就是将/opt和它的子目录所有者都改成lisi
	修改目录的所属组： chown ：lisi /opt 
	两者一起修改：chown lisi:lisi /opt
关于权限的匹配机制：遵循匹配即停止机制
	所有者>所属组>其他人
	当系统判定到一个用户是目录的所有者，就只会看所有者所拥有的权限，而不去看这个用户还有没有其它权限，以此类推
组的附加权限，仅适用于目录：
	chmod g+s /opt #设置完后，以后不管谁在/opt里创建文档，都会自动变成和/opt的所属组同组，且如果新建的是目录的话，所有权限会完全相同。
		ls -ld /opt显示内容如下
		d rwxr-srwx. 3 root root 32 12月 5 11：10   #会在所属组的x位置上显示s，如果所属组成员有执行权限，就是 s 没有就显示 S
用户的附加权限，仅适用于可执行文件：	
	设置完后会出现在所有者的x权限位上，以大小s显示，有执行权限就显示s，无则显示S，必须有执行权限才有意义。
	chmod u+s /opt/a.sh   #传递所有者身份，以后不管什么用户运行该程序，都会以该文件所有者权限执行
其它用户的附加权限：
	用于限制其它用户，设置完后会出现在其它用户的x权限位上，x会变成t，适用于开放w权限的共享目录，可以阻止用户滥用w权限修改它人的文档。
	chmod o+t /var/web 
acl访问控制列表：acl策略实现更加精细的控制，可以针对单个用户，或者组设置权限
	给指定用户增加acl权限：setfacl -m u:用户名：权限 /opt
	给指定组增加acl权限：setfacl -m g:组名：权限 /opt/1.txt
	删除用户或组对该文档的acl权限：
		setfacl -x u:用户名：权限 /opt
		setfacl -x g:组名：权限 /opt
	删除文档的所有acl策略：
		setfacl -b /opt
	查看文档的所有权限包括acl权限：
		getfacl /opt
	利用acl给用户设置黑名单：
		setfacl -m u:lisi:--- /opt

权限的数值表示：
	r=4 w=2 x=1	



 

	

