一、文件加密与解密
	1.介绍：
		信息在传递中会遇到各种各样的危险，比如电脑黑客、商业间谍等，所以要给信息加密
		现在我们针对的是单个的文件，我们手动给它加密的方法
		加密就是把明文变成密文的过程
		解密就是把密文变成明文的过程
	2.加密算法：
		对称加密：
			加密/解密用同一个密钥
			对称加密通常使用DES、AES算法
		非对称加密：
			加密/解密使用不同的密钥，也就是公、私钥
			非对称加密通常使用RSA、DSA算法
		信息摘要：
			基于输入的信息，生成长度、位数固定的散列值，以此来保证信息的完整性，类似于验证码，如果信息发生变化，那么散列值则会发生变化，以此来判断信息是否变化了
			可以为一个光盘镜像、一个rpm包、一个文件、防火墙规则等都可以生成一个校验码，来保证它的完整性：
				md5sum rhel7.iso		//针对某光盘文件生成校验码
				iptables -nl | md5sum	//针对防火墙规则生成的md5校验码
				你生成md5校验码，只要文件内容没有变化，它的校验码你生成几次都不会变，但是内容一旦变化，生成的校验码就会发生变化，以此来判断是否内容发生了变化
				你就像我们网上下载游戏，它都会给我们一个校验码，我们下载完成，只要校验码和它给的相同，则说明下载没有出错，是一样的原理
				sha512sum rhel7.iso	//这就是sha算法的命令，相对于md5复杂一些
			信息摘要的算法通常使用MD5、SHA	
	3.gpg介绍：
		是最流行的数据加密、数字签名工具软件，默认是系统自带的
		我们可以用gpg --version命令查看一下gpg的版本，通过这条命令我们可以知道，gpg所有的文件都存放在 ～/.gnupg 也就是用户家目录里的隐藏目录
		如果我们一台新的机器没有gpg软件，则需要安装gnupg2-2.0.22-4.el7.x86_64软件包
		which gpg 查看一下命令是哪个程序文件提供的
		rpm -qa /bin/gpg 可以查看gpg程序文件是由哪个安装包提供的
		gpg --help 可以查看一下gpg详细的使用方法，以及它支持的算法
	4.例子：
		我们这个例子是在一台服务器中的两个用户实现的，一个用户加密文件，一个用户解密文件
		当然也可以是两台电脑，一台电脑的用户给文件加密，传给另一台电脑的用户，让它解密这个文件
		准备一下环境：在真机上创建两个用户usera和userb并为其设置密码，真机ssh远程连真机自己，要加-X选项，因为要涉及到图形上的操作，不能用su命令切换用户
		因为要用random随机数来生成密钥对，所以我们要用新版本的random来代替就版本的random，这样可以更快的生成密钥：
			mv /dev/random /dev/random2
			ln -s /dev/urandom /dev/random	#这是新版的random，把它做成软连接，这个操作的知识在高级运维里讲过
		开两个终端分别连接这两个用户：
			ssh -X usera@localhost
			ssh -X userb@localhost
		4.1 gpg对称加密/解密
			usera操作：
				准备一个明文文件/home/usera/a.txt
				gpg -c /home/usera/a.txt		//-c就是加密，它会弹出一个对话框，让你设置一个密码，会让你重复输入两次
				然后gpg就会生成一个密文文件/home/usera/a.txt.gpg，以及许多的相关文件都会放在这个用户的家目录里
				我们要把这个密文文件放到/tmp目录下，这个目录所有用户都有访问权限，这样userb才能看到这个文件：
					mv /home/usera/a.txt.gpg /tmp
			userb操作：
				userb用户就可以把这个密文文件放到自己的家目录里然后解密这个文件
				cp /tmp/a.txt.gpg /home/userb/
				gpg -d /home/userb/a.txt.gpg
					#-d是解密命令，弹出的对话框，就输入usera设置的那个口令
				gpg -d /home/userb/a.txt.gpg > a.txt	
					#不过它解密之后的内容默认会输出到屏幕上，所以重定向到一个文件里方便看，第二次不会管你要密码了
		4.2 gpg非对称加密/解密
			使用密钥对，对数据做加解密，公钥加密，私钥解密
			加密方会生成公钥和私钥，把私药传给需要解密方
			你如果用的是非对称加密，它默认会把加密的文件，放到为这个文件加密的用户的家目录下的～/.gnupg下，
			没有这个目录的时候，你做加密操作的时候，会自动创建这个目录

			userb对文件加密，usera解密这个加密文件
			1.usera用户创建公钥和私钥对，然后把公钥传给userb
			2.userb用usera给的公钥对文件加密，然后将加密的文件传给usera
			3.usera有对应的私钥，所以，可以用私钥对其解密，查看加密的文件
			
			userb操作：
				gpg --gen-key	//生成公私钥，然后会有以下设置
				请选择您要使用的密钥种类：
				   (1) RSA and RSA (default)
				   (2) DSA and Elgamal
				   (3) DSA (仅用于签名)
				   (4) RSA (仅用于签名)
					您的选择？  //在这里敲回车，用的就是第一种算法
					RSA 密钥长度应在 1024 位与 4096 位之间。
					您想要用多大的密钥尺寸？(2048)	//在这里敲回车，默认就是2048长度
					您所要求的密钥尺寸是 2048 位
					请设定这把密钥的有效期限。
						 0 = 密钥永不过期
					      <n>  = 密钥在 n 天后过期
					      <n>w = 密钥在 n 周后过期
					      <n>m = 密钥在 n 月后过期
					      <n>y = 密钥在 n 年后过期
					密钥的有效期限是？(0)  	//默认就是0，就是永久有效
					密钥永远不会过期
					以上正确吗？(y/n)		//输入y确认即可

					You need a user ID to identify your key; the software constructs the user ID
					from the Real Name, Comment and Email Address in this form:
					    "Heinrich Heine (Der Dichter) <heinrichh@duesseldorf.de>"

					真实姓名：			//写创建这个密钥的用户名，所以写userb
					电子邮件地址：			//可写可不写
					注释：				//可写可不写
					您选定了这个用户标识：	//可写可不写，这3条是用来标识这个密钥的，这些信息如果填写了，一定要记得，解密的时候要用
					    “userb”

					更改姓名(N)、注释(C)、电子邮件地址(E)或确定(O)/退出(Q)？	//输入O确认回车即可
					然后会弹出让你输入一个密码，这个密码用于保护私钥！必须记住，会让你输入两次，然后创建即可，它会自动将密钥对存放于该用户的家目录中.gnupg下
						如果不想要这个密钥对了，删了.gnupg目录即可，重新敲一遍

					然后我们看下ls ~/.gnupg下的文件：
						pubring.gpg		//公钥
						secring.gpg		//私钥
					userb需要把公钥导出进一个文件里，然后把这个文件传给usera，否则无法让usera使用：
						gpg -a --export > /tmp/userb.pub	//这个文件里面就是公钥里的内容

				usera的操作：
					把公钥导入到自己的～/.gnupg
					gpg --import /tmp/userb.pub	//它就自动导入到自己的家目录中的.gnupg下了
					ls -a ~/.gnupg 就能看到这个公钥文件了
					然后利用这个公钥给文件加密：
						gpg -e -r userb a.txt 	
							//这个userb就是我用userb用户创建密钥对时，输入的真实姓名，a.txt是我需要加密的明文文件	
							//然后它就会自动用～/.gnupg里的公钥文件为这个文件加密了
							//然后它就会生成一个a.txt.gpg密文文件

				我们把这个用公钥加密的文件放到/tmp下，用userb用户解密这个文件：
					gpg -d ～/a.txt.gpg > b.txt	//解密的命令，会自动用自己.gnupg下的私钥去解密，把解密之后的内容自动定向到这个文件里
						不过还需要输入解密所需要用的密码，就是当时设置的口令！	
							
				当然这个也可以两台服务器之间的两个用户做的，把公钥给另一台服务器，让它用这个公钥给文件加密即可，然后把加密的文件传给有私钥的服务器，用命令解密即可
				这个应用就和访问淘宝是一样的，淘宝给每一个用户都发公钥，私钥在淘宝自己手里，用户用公钥加密了的数据，给淘宝，淘宝自己解

		4.3 gpg数字签名
			作用：
				是为了保证数据的完整性，不会对文件做加密！签名时，gpg所用的就是SHA、MD5算法，只要你内容和你用私钥做签名时内容完全一致，即可验证成功
			应用场景：
				就比如说红帽官方有很多开源软件，为了保证这些开源软件的完整性，即安全性，红帽官方用私钥给软件包做数字签名
				红帽官方把这些做了私钥签名的软件，和公钥都共享给客户，客户再用这个公钥验证即可
			例子：
				以上面的环境为基础，我userb有密钥对，我usera有公钥，那么我userb对文件用私钥做数字签名，然后把这个文件给usera做验证
				userb上的操作：
					gpg -b b.txt	//给b.txt做数字签名
					然后会让你输入你私钥的口令
					然后会在当前目录下生成b.txt.sig
					我们把这个文件放到/tmp目录下
				usera上的操作：
					gpg --verify /tmp/b.txt.sig	//用自己家目录里面的私钥来验证
					查看效果即可

二、AIDE入侵检测系统
	该软件为一套入侵检测系统，需要你自己去查，并不能阻止别人入侵你
		所需软件包：yum -y install aide
		它的主配置文件在/etc/aide.conf
		修改其主配置文件：
		vim /etc/aide.conf
			3  @@define DBDIR /var/lib/aide		//这是定义了，入侵检测文件所存放的位置
			4  @@define LOGDIR /var/log/aide		//这是指定日志文件存放的位置
			7  database=file:@@{DBDIR}/aide.db.gz		//这是定义入侵检测文件的名称叫aide.db.gz,这个文件是用来与最新检测文件做比对用的
			12  database_out=file:@@{DBDIR}/aide.db.new.gz	//这是定义入侵检测文件的名称叫aide.db.new.gz，这个文件是你执行检测命令生成的最新检测文件
			15  gzip_dbout=yes	//生成检测文件时，是否做压缩处理
			以下#注释行都是希望检查的项目
			28  #p:      permissions		//检测权限
			29  #i:      inode:		//检测索引节点
			30  #n:      number of links	//检测链接个数
			31  #u:      user		//检测所属者有没有变化
			32  #g:      group	//检测所属组有没有变化
			33  #s:      size		//检查文件大小
			34  #b:      block count		//检查数据块数量
			35  #m:      mtime	//检测文件的修改时间
			36  #a:      atime	//检测文件的访问时间
			37  #c:      ctime	//检测文件的更改时间
			....
			下面都是定义检查规则
			54 FIPSR = p+i+n+u+g+s+m+c+acl+selinux+xattrs+sha256	//检测这些项目
			64 ALLXTRAHASHES = sha1+rmd160+sha256+sha512+tiger
			67 EVERYTHING = R+ALLXTRAHASHES
			71 NORMAL = sha256
			86 CONTENT = sha256+ftype
			89 CONTENT_EX = sha256+ftype+p+u+g+n+acl+selinux+xattrs
			.....
			下面都是定义哪些目录做哪种规则的检查，它检查的目录越多，生成检测文件所需要的时间就越长
			99 /boot/   CONTENT_EX
			100 /bin/    CONTENT_EX
			101 /sbin/   CONTENT_EX
			102 /lib/    CONTENT_EX
			103 /lib64/  CONTENT_EX
			104 /opt/    CONTENT
			119 !/etc/mtab$		//加！就是不检查的意思
			.....一直到312行
				
			我们可以把99行到312行所需要检测的目录，注释掉，因为想快点看效果，然后在最后一行写一行想检测的目录，生产环境中不要这么做：
				sed -i '99,312s/^/#/' /etc/aide.conf
				vim /etc/adie.conf
					/root/ 	FIPSR	  #我用这个规则检测我/root目录
			根据配置文件要求开始检测：
				aide --init		#检测并会生成对应的检测文件
				所生成的检测文件会存放到/var/lib/aide/aide.db.new.gz	
				我们看完这个aide.db.new.gz，应该将它改名成aide.db.gz，因为以后再做检查还要生成aide.db.new.gz文件
				以后再生成的aide.db.new.gz文件会与aide.db.gz文件做比对
				在生产环境里，当我们应做完检测操作之后，应该把这个aide.db.new.gz文件拷到移动设备里，
				然后下次再要做检测的时候，把这个aide.db.new.gz文件拷贝到	/var/lib/aide/目录下，并改名成aide.db.gz，这样新生成的检测文件就会与它做比对了
				你每次做检测，都应该重复一遍这样的操作，别忘了把老版本的aide.db.gz文件删除，这样才能保证每次比对都是最新的
			对/root做一些操作之后，再做入侵检测：
				比如添加一些文件，对文件内容做一下修改之类的操作
				然后输入对比检测命令：
					aide --check	//会新生成aide.db.new.gz文件，并自动与aide.db.gz文件做对比，将比对信息输出到屏幕

三、扫描与抓包
	1.扫描工具nmap 
		所需软件包nmap，查看帮助文档man nmap

		为什么做扫描：
			通过扫描对应服务的端口，来确认服务是否在运行
			通过对ip地址做扫描，来确认物理连通性是否正常
			检测潜在危险、查找可攻击目标、收集设备/主机/系统/软件信息、发现可利用的安全漏洞
		典型的扫描工具：
			nmap，扫描器
			scan，主动探测
			sniff，被动监听/嗅探
			capture，数据包捕获（抓包）
		nmap软件简介：
			一款强大的网络探测利器工具
			支持多种探测技术：
				ping扫描	//当你维护多台服务器的时候，就可以用nmap去ping，就不用一台台ping了
				多端口扫描
				TCP/IP指纹校验...
		基本用法：
			nmap [扫描类型] [选项] 扫描目标
			扫描选项：
				-n 不做主机名解析 
			扫描类型：
				-sU 扫描使用UDP传输协议的服务，哪些是开放的
				-sT 扫描使用TCP传输协议的服务，哪些是开放的，全开放式扫描
				-sS 扫描使用TCP传输协议的服务，哪些是开放的，半开放式扫描
					-sT -sS之间的区别：
					两台主机之间传输数据的时候，如果是使用TCP协议传输的话，是需要三次握手的，我50扫描51，也是传输数据的过程啊
					当我要做完整的三次握手（50要访问51，50给51发SYN，51给50发ACK和SYN，50再给51发ACK），再传输数据的时候，就是 -sT
					我50不给51发最后的ACK，就是不完全开放扫描，就是 -sS
				-sP 就是ping一台主机在不在线，可以一下ping好多台
				-A 目标系统全面分析
									
		例子：
			nmap 192.168.4.50			//会把这台服务器所有开放的服务都列出来，可以扫别人，也可以扫自己，我也可以扫描域名或者主机名，前提是能解析它的IP地址
			nmap -sP 192.168.4.50-53		//就是ping50.51.52.53这些台服务器，也可以单独ping一台哦，我也可以扫描域名或者主机名，前提是能解析它的IP地址
			nmap -sU 192.168.4.51		//看看51服务器上用UDP传输协议的服务
			nmap -sU svr7.tedu.cn		//查看这个主机的使用udp传输的服务，哪些开启了
			nmap -sS -p 80 192.168.4.51	//查看TCP传输的服务，半开放式扫描，扫描这个主机上的80端口
			nmap -sS -p 80，3306 192.168.4.51	//扫描俩端口，也可以扫描更多的端口，但是如果某个端口不是默认服务的端口，那么它就不会显示服务名！
			nmap -sS -p 21-80，3306 192.168.4.51	//也可以连续的扫描，和不连续的扫描结合
			nmap -sP 192.168.4.0/24		//加上网关，可以扫描整个网段
			nmap -sP 192.168.4.1,10,52		//也可以同时扫多台1\10\52是否在线，不连续的扫描
			nmap -A 127.0.0.1			//扫描我本机的所有服务，及服务的详细状态,及各种资源等


	2.抓包工具tcpdump	所需软件包tcpdump 查看帮助文档man tcpdump
	为什么抓包：
		抓包只能抓经过自己网卡的数据包，而不可以去抓别人家网卡的包
		我们可以通过抓到的相应数据包，来确认自己的机器做了什么，有什么潜在危险，而做出相应的防范措施，或者通过相应的数据包，知道自己的服务器被怎么攻击的
	抓包工具：
		tcpdump、WireShark（图形化抓包软件）
	tcpdump软件介绍：
		一款提取tcp数据包的命令行工具
		抓包的前提是，这个数据包，可以经过你的这台机器！你才能抓到		
	tcpdump基本用法：
		tcpdump [选项] [过滤条件]	
		常用选项：
			-i	指定监控的网络接口
			-A	转换为ASCII码，以便阅读
			-w	将数据包信息保存到指定文件
			-r	从指定文件读取数据包信息
			-c 	指定抓包次数，不指定，就是默认全抓
		常用过滤条件：
			类型：
				host(指定抓一台主机的数据包) 
				net(指定抓一个网络的数据包) 
				port(指定抓一个端口的数据包) 
				portrange(指定抓一个端口范围的数据包)
			方向：
				src(抓源地址是什么的数据包)
				dst(抓目标地址是什么的数据包)
			协议：
				tcp(抓使用tcp协议的数据包)
				udp(抓udp协议的数据包)
				ip(。。。)
				wlan(。。。)		
				arp(。。。)
				...	
			多个条件组合：
				and(满足多个条件)
				or(满足其中一个条件)
				not(不是这些条件的数据包)
		例子：
			tcpdump	//单独这一条命令，就是抓经过我本机的所有数据包，如果我抓包时没有指定抓某一个网络接口的包，它默认抓的是网卡编号是0的包
			tcpdump -i br1	//就是抓经过我本机br1网卡的数据包
			tcpdump -i br1 -c 2	//就是抓经过我br1网卡的数据包，只抓2个
			tcpdump -i br1 -c 2 -A	//就是转换成ASCII码显示抓包信息
			tcpdump -i br1 -c 2 -A -w /a.txt	//这就是把抓到ASCII码信息保存到a.txt文档里
			tcpdump -A -r /a.txt	//就是从保存的文件中读取保存的信息
			tcpdump -A -i eth0 -c 10 icmp	//给我从eth0口抓10次关于ping命令的包（icmp是提供ping命令的协议），然后把它转换成ASCII码输出到屏幕上
			tcpdump -A -i eth0 -c 10 icmp and host 172.40.56.118	//并且抓跟主机172.40.56.118相关的包
			tcpdump -i eth0 tcp port 80	//抓eth0口的使用tcp协议的，跟端口80有关的数据包
			tcpdump -i eth0 tcp port 80 and host 172.40.56.118	//并且和172.40.56.118有关的数据包
			tcpdump -i eth0 tcp port 80 and dst host 172.40.56.118	//到达我这台机器的数据包，但是目标地址是172.40.56.118的数据包
			我们还可以抓指定服务比如邮件服务的数据包，指定邮件服务的端口，抓它，默认邮件服务是不加密的，我们可以抓到它的密码！

补充一个知识点：last命令可以查看所有ssh连上过我的主机，都会有记录

	3.图形抓包软件：WIRESHARK
		软件介绍：
			一款与tcpdump类似的抓包工具，需要图形环境
			管网地址是：http://www.wireshark.org
			除了可以抓包，还可以分析软件包！
			所需软件包yum -y install wireshark wireshark-gnome	一共两个模块，一个是主程序，一个是图形程序
		怎么在图形界面中打开它：
			应用程序—互联网—wireshark network analyzer		
			其中start下面会看到，它已经获取了我们本机所有的网络接口，我们选中一个网卡，然后点击start，它就会开始抓包了
			我们会看到三个部分，第一个部分，就是抓到的所有包，第二个窗口，就是每一个数据包的具体信息,这部分我们就可以看了，第三个窗口就是每一个包里的具体数据
			如果想停止抓包，就按工具栏的红色方框按钮，再想抓包就按旁边的鲨鱼鳍图标，这时候它会问你，是否保存刚才抓到的包，点save就指定一个文件	
			它第一个窗口，上面的一排按钮，你点一下是可以按照你指定的类型排序的
			当你关闭它的时候，它会问你停止是否保存退出
		它还可以把tcpdump抓到的包保存到的文件，打开查看内容！并且它查看到的内容不会是乱码，就可以利用这个功能来查看抓到的包！
			使用方法：fiel->open->打开你用tcpdump保存的文件  然后看第二部分即可	
			
		









