
nginx 的 stub_status 模块的作用
1.先安装模块，直接装就可以
 ./configure --with-http_stub_status_module

修改nginx配置文件
在server块下面加上如下配置：
      #性能统计
location /nginx_status {    #无需指定网页根目录
stub_status  on;
access_log    off;
}

重启nginx
修改配置文件后，先检查配置文件语法是否正确，正确的话重启。
/usr/local/nginx/sbin/nginx -t
/usr/local/nginx/sbin/nginx -s reload

在浏览器中输入 "域名/nginx_status" 就会显示nginx上次启动以来工作状态的统计的结果。
6）返回各数据项说明：
Active connections: 当前nginx正在处理的活动连接数.
Server accepts handled requests request_time: nginx总共处理了13057 个连接,成功创建13057 握手(证明中间没有失败的),总共处理了11634 个请求,总共请求时间2230854。
Reading: nginx读取到客户端的Header信息数.
Writing: nginx返回给客户端的Header信息数.
Waiting: 开启keep-alive的情况下,这个值等于 active – (reading + writing),意思就是nginx已经处理完成,正在等候下一次请求指令的驻留连接。
所以,在访问效率高,请求很快被处理完毕的情况下,Waiting数比较多是正常的.如果reading +writing数较多,则说明并发访问量非常大,正在处理过程中。

对外隐藏nginx版本号！不然默认404报错的时候会显示nginx版本的
vim /usr/local/nginx/conf/nginx.conf
在http {—}里加上server_tokens off;
还要编辑php-fpm配置文件
将fastcgi_param SERVER_SOFTWARE nginx/$nginx_version;这一行改为
  fastcgi_param SERVER_SOFTWARE nginx;
   然后重启nginx和php-fpm
使用“watch -n 1 ss -s”命令观察服务器连接数变化(每秒执行一次 ss 命令)
ss 用来倒出socket 的统计数据。 它显示跟 netstat 类似的信息，但能显示比其它工具更详细的TCP 状态信息。 -s选项是 显示概要统计

内核优化：
修改/proc下内核参数文件内容，不能使用编辑器来修改内核参数文件，理由是由于内核随时可能更改这些文件中的任意一个，另外，这些内核参数文件都是虚拟文件，实际中不存在，因此不能使用编辑器进行编辑，而是使用echo命令，然后从命令行将输出重定向至 /proc 下所选定的文件中。
1.
vim /proc/sys/net/ipv4/tcp_fin_timeout
echo 30 > /proc/sys/net/ipv4/tcp_fin_timeout
表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。
参数修改后立即生效，但是重启系统后，该参数又恢复成默认值。因此，想永久更改内核参数，需要修改/etc/sysctl.conf文件

2.
vim /proc/sys/net/ipv4/tcp_syncookies
echo 1 >  /proc/sys/net/ipv4/tcp_syncookies
表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；

3.
echo 2 > /proc/sys/net/ipv4/tcp_synack_retries
vim /proc/sys/net/ipv4/tcp_synack_retries 
为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的 ACK。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。
    
其它内核优化详细信息可以访问这个博客查看：https://blog.csdn.net/u013697959/article/details/77369931





